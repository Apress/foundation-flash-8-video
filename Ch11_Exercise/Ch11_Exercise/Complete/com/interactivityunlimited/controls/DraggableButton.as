import flash.geom.Rectangle;class com.interactivityunlimited.controls.DraggableButton extends MovieClip {	var __data:String;		var __message:String;	var ourBroadcaster:Object;		var hitArea:MovieClip;	var constraint:Rectangle;	var lastSliderValue:Number;	var isDrag:Boolean;			// our constructor -- automatically called as soon as we call AttachMovie	function DraggableButton() {		// First, set this object up to be a broadcaster		ourBroadcaster = new Object();		AsBroadcaster.initialize(ourBroadcaster);				constraint = new Rectangle( 0, 0, 0, 0 );	}		[Inspectable(type='String', defaultValue='drag', name='Event Message')]	public function get message():String {		return __message;	}		public function set message( newMessage:String ):Void {		__message = newMessage;	}		public function setConstraint( x, y, width, height ):Void {		constraint = new Rectangle( x, y, width, height );	}		public function calculateSliderValue():Void {		var sliderData:Number = Math.floor(((constraint.bottom - this._y) / constraint.bottom) * 100);				if( sliderData != lastSliderValue ) {			ourBroadcaster.broadcastMessage( __message, sliderData );			lastSliderValue = sliderData;		}	}		public function onMouseMove() {		if( isDrag ) {			calculateSliderValue();		}	}		public function onPress():Void {		this.startDrag( true, constraint.left,  constraint.top,  constraint.right, constraint.bottom );		isDrag = true;	}		public function onRelease():Void {		this.stopDrag();		calculateSliderValue();		// one more calculation in case there's a change		isDrag = false;	}		public function onReleaseOutside():Void {		onRelease();	}	public function addListener( theListener:Object ):Boolean {		return ourBroadcaster.addListener( theListener );	}		public function removeListener( theListener:Object ):Boolean {		return ourBroadcaster.removeListener( theListener );	}}