class com.interactivityunlimited.controls.Slider extends MovieClip {	var __thumb:MovieClip;	var __slide:MovieClip;	var __labelField:TextField;		var __label:String;	var __message:String;	var ourBroadcaster:Object;		var lastSliderValue:Number;		[Inspectable(type='String', defaultValue='Slider', name='Slider Label')]	public function get label():String {		return __label;	}		public function set label( newLabel:String ):Void {		__label = newLabel;		__labelField.text = newLabel;	}		[Inspectable(type='String', defaultValue='sliderEvent', name='Slider Event')]	public function get message():String {		return __message;	}		public function set message( newMessage:String ):Void {		__message = newMessage;	}		public function get value():Number {		return lastSliderValue;	}		public function sliderMoved( sliderValue:Number ):Void {		lastSliderValue = sliderValue;		ourBroadcaster.broadcastMessage( __message, sliderValue );	}			public function addListener( theListener:Object ):Boolean {		return ourBroadcaster.addListener( theListener );	}		public function removeListener( theListener:Object ):Boolean {		return ourBroadcaster.removeListener( theListener );	}	public function Slider() {		// First, set this object up to be a broadcaster		ourBroadcaster = new Object();		AsBroadcaster.initialize(ourBroadcaster);				__labelField.text = __label;				__thumb = this.attachMovie( "Thumb", "__thumb", this.getNextHighestDepth() );				__thumb._x = __slide._x;		__thumb._y = __slide._y + __slide._height;	// put the slider thumb at the bottom		__thumb.setConstraint( __slide._x, __slide._y, 0, __slide._height );		__thumb.message = "sliderMoved";				__thumb.addListener( this );				lastSliderValue = 0;			}}